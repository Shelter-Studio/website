<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>庇护所</title>
  
  <subtitle>Shelter</subtitle>
  <link href="https://xavierwah.xyz/atom.xml" rel="self"/>
  
  <link href="https://xavierwah.xyz/"/>
  <updated>2022-04-23T08:05:18.549Z</updated>
  <id>https://xavierwah.xyz/</id>
  
  <author>
    <name>Xavier Wah</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>获取 Minecraft 正版玩家皮肤</title>
    <link href="https://xavierwah.xyz/770ff2cc819f/"/>
    <id>https://xavierwah.xyz/770ff2cc819f/</id>
    <published>2021-07-26T04:18:02.000Z</published>
    <updated>2022-04-23T08:05:18.549Z</updated>
    
    <content type="html"><![CDATA[<h2 id="引子"><a href="#引子" class="headerlink" title="引子"></a>引子</h2><p>前段日子和朋友玩 Hypixel 的时候，朋友问我能不能把某个玩家的皮肤给下载下来私用。我当时使用了 <a href="https://namemc.com/">NameMC</a> 获取玩家皮肤，但后来用来获取玩家的 UUID 时，发现有些玩家没办法搜到。这也就催生了我去寻找远古方法，直接通过 Mojang 服务器获取玩家皮肤、UUID 等信息的想法。</p><!-- more --><h2 id="原理阐释"><a href="#原理阐释" class="headerlink" title="原理阐释"></a>原理阐释</h2><p>首先，我们通过 Mojang 提供的官方 <em>API</em> <code>api.mojang.com/users/profiles/minecraft/[ID]</code> 获取玩家的 UUID。对应填入玩家 ID，访问后就可以获取一段对应的 JSON，格式大概如下：</p><pre><code class="json">&#123;&quot;name&quot;:&quot;XavierWah&quot;,&quot;id&quot;:&quot;0be6e8232e5f4cb198320792b0da9188&quot;&#125;</code></pre><p>很明显可以看出，这段信息中键 <code>name</code> 为玩家 ID，键 <code>id</code> 为玩家 UUID。玩家的 UUID 到手后，我们可以通过 <em>Session Server</em> <code>sessionserver.mojang.com/session/minecraft/profile/[UUID]</code> 获取到玩家的材质信息，同样是一段 JSON，格式大概如下：</p><pre><code class="json">&#123;  &quot;id&quot; : &quot;0be6e8232e5f4cb198320792b0da9188&quot;,  &quot;name&quot; : &quot;XavierWah&quot;,  &quot;properties&quot; : [ &#123;    &quot;name&quot; : &quot;textures&quot;,    &quot;value&quot; : &quot;ewogICJ0aW1lc3RhbXAiIDogMTYyNzI5Mjk3NDkwMCwKICAicHJvZmlsZUlkIiA6ICIwYmU2ZTgyMzJlNWY0Y2IxOTgzMjA3OTJiMGRhOTE4OCIsCiAgInByb2ZpbGVOYW1lIiA6ICJYYXZpZXJXYWgiLAogICJ0ZXh0dXJlcyIgOiB7CiAgICAiU0tJTiIgOiB7CiAgICAgICJ1cmwiIDogImh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvN2NiMzkxMTdhN2U4ZmYxYjE0M2VmMGU4YzRiMDg5MjA0ZTk3YTBlNmQwMGRjZjRlNjkxYWFmODlmNzhkOWQzMSIsCiAgICAgICJtZXRhZGF0YSIgOiB7CiAgICAgICAgIm1vZGVsIiA6ICJzbGltIgogICAgICB9CiAgICB9CiAgfQp9&quot;  &#125; ]&#125;</code></pre><p>这段里我们需要的信息，就是此处键 <code>value</code> 的值。这是一段经过 Base64 加密后的信息，解密后仍是一段 JSON，格式大概如下：</p><pre><code class="json">&#123;  &quot;timestamp&quot; : 1627294093042,  &quot;profileId&quot; : &quot;0be6e8232e5f4cb198320792b0da9188&quot;,  &quot;profileName&quot; : &quot;XavierWah&quot;,  &quot;textures&quot; : &#123;    &quot;SKIN&quot; : &#123;      &quot;url&quot; : &quot;http://textures.minecraft.net/texture/7cb39117a7e8ff1b143ef0e8c4b089204e97a0e6d00dcf4e691aaf89f78d9d31&quot;,      &quot;metadata&quot; : &#123;        &quot;model&quot; : &quot;slim&quot;      &#125;    &#125;  &#125;&#125;</code></pre><p>此处的 <code>timestamp</code> 为我们访问网站时的时间戳，<code>SKIN</code> 中键 <code>url</code> 的值代表玩家皮肤的网址、键 <code>model</code> 的值代表玩家皮肤的种类（这个键不一定存在，但纤细一定是 <code>slim</code>）。访问这个网址，就得到了玩家的皮肤。人工操作起来很复杂，需要辗转多次才能得到最终结果，并且中途还需要进行一次 Base64 解码，于是我便写了一个程序来帮助我获取玩家信息。</p><h2 id="代码解剖"><a href="#代码解剖" class="headerlink" title="代码解剖"></a>代码解剖</h2><p><i class="download-icon fa-solid fa-cloud-arrow-down"></i> <a href="skinFetcher.py" download>下载 <code>skinFetcher.py</code></a> 下方的代码。</p><pre><code class="python">import requestsimport base64import jsonusername = input(&#39;输入要获取皮肤玩家 ID：&#39;).split()[0]# 获取用户 UUIDapiWeb = requests.get(&#39;https://api.mojang.com/users/profiles/minecraft/&#123;&#125;&#39;.format(username)).contentuseruuid = json.loads(apiWeb)[&#39;id&#39;]# 获取用户信息对应 Base64sessionWeb = requests.get(&#39;https://sessionserver.mojang.com/session/minecraft/profile/&#123;&#125;&#39;.format(useruuid)).contentuserbase = json.loads(sessionWeb)[&#39;properties&#39;][0][&#39;value&#39;].encode(&#39;utf-8&#39;)# 解码 Base64 并下载用户皮肤userskin = json.loads(base64.b64decode(userbase))[&#39;textures&#39;][&#39;SKIN&#39;][&#39;url&#39;]fetch = open(&#39;&#123;&#125;.png&#39;.format(username), &#39;wb&#39;).write(requests.get(userskin).content)input(&#39;已保存至同级目录下，按回车键退出。&#39;)</code></pre><p>由于有些人没有装 Python，所以我又用 PowerShell 写了一个功能一样的。</p><p><i class="download-icon fa-solid fa-cloud-arrow-down"></i> <a href="skinFetcher.ps1" download>下载 <code>skinFetcher.ps1</code></a> 下方的代码。</p><pre><code class="powershell">$username = Read-Host &#39;输入要获取皮肤玩家 ID&#39;# 获取用户 UUID$apiWeb = ( Invoke-WebRequest -Uri ( &#39;https://api.mojang.com/users/profiles/minecraft/&#39; + $username ) ).Content$useruuid = ( $apiWeb | ConvertFrom-Json ).id# 获取用户信息对应 Base64$sessionWeb = ( Invoke-WebRequest -Uri ( &#39;https://sessionserver.mojang.com/session/minecraft/profile/&#39; + $useruuid ) ).Content$userbase = ( $sessionWeb | ConvertFrom-Json ).properties.value# 解码 Base64 并下载用户皮肤$userskin = ( ( [Text.Encoding]::ASCII.GetString([Convert]::FromBase64String($userbase)) ) | ConvertFrom-Json ).textures.SKIN.urlInvoke-WebRequest $userskin -OutFile ( ($pwd).Path + &#39;\&#39; + $username + &#39;.png&#39; )Read-Host &#39;已保存至同级目录下，按回车键退出。&#39;</code></pre><p>以上代码的逻辑和我们人工操作是一个流程。运行程序之后，直接根据提示输入玩家 ID 即可，皮肤会自动下载到运行目录中。</p>]]></content>
    
    
    <summary type="html">前段日子和朋友玩 Hypixel 的时候，朋友问我能不能把某个玩家的皮肤给下载下来私用。我当时使用了 NameMC 获取玩家皮肤，但后来用来获取玩家的 UUID 时，发现有些玩家没办法搜到。这也就催生了我去寻找远古方法，直接通过 Mojang 服务器获取玩家皮肤、UUID 等信息的想法。</summary>
    
    
    
    <category term="Minecraft" scheme="https://xavierwah.xyz/categories/Minecraft/"/>
    
    
    <category term="Minecraft" scheme="https://xavierwah.xyz/tags/Minecraft/"/>
    
    <category term="Python" scheme="https://xavierwah.xyz/tags/Python/"/>
    
    <category term="PowerShell" scheme="https://xavierwah.xyz/tags/PowerShell/"/>
    
  </entry>
  
  <entry>
    <title>起点</title>
    <link href="https://xavierwah.xyz/03ea5e0afdd2/"/>
    <id>https://xavierwah.xyz/03ea5e0afdd2/</id>
    <published>2021-07-25T23:08:43.000Z</published>
    <updated>2022-04-22T01:02:27.029Z</updated>
    
    <content type="html"><![CDATA[<p>嗨嗨，这里是 Xavier Wah 的庇护所，也是我的个人博客。<br>Minecraft 和程序设计等内容将会成为庇护所的主要更新内容，偶尔也会上传文学创作的作品。<br>截至现在，我终于将所有内容都配置好了。今后我会在这个博客更新一些内容、发布源码等，希望可以多加关注，在这里找到你需要的内容。<br>永远好奇，别处见。</p>]]></content>
    
    
    <summary type="html">嗨嗨，这里是 Xavier Wah 的庇护所，也是我的个人博客。</summary>
    
    
    
    <category term="Announcement" scheme="https://xavierwah.xyz/categories/Announcement/"/>
    
    
    <category term="Announcement" scheme="https://xavierwah.xyz/tags/Announcement/"/>
    
  </entry>
  
</feed>
